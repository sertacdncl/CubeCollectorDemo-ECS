//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity playAreaParentEntity { get { return GetGroup(GameMatcher.PlayAreaParent).GetSingleEntity(); } }
    public PlayAreaParentComponent playAreaParent { get { return playAreaParentEntity.playAreaParent; } }
    public bool hasPlayAreaParent { get { return playAreaParentEntity != null; } }

    public GameEntity SetPlayAreaParent(UnityEngine.Transform newValue) {
        if (hasPlayAreaParent) {
            throw new Entitas.EntitasException("Could not set PlayAreaParent!\n" + this + " already has an entity with PlayAreaParentComponent!",
                "You should check if the context already has a playAreaParentEntity before setting it or use context.ReplacePlayAreaParent().");
        }
        var entity = CreateEntity();
        entity.AddPlayAreaParent(newValue);
        return entity;
    }

    public void ReplacePlayAreaParent(UnityEngine.Transform newValue) {
        var entity = playAreaParentEntity;
        if (entity == null) {
            entity = SetPlayAreaParent(newValue);
        } else {
            entity.ReplacePlayAreaParent(newValue);
        }
    }

    public void RemovePlayAreaParent() {
        playAreaParentEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public PlayAreaParentComponent playAreaParent { get { return (PlayAreaParentComponent)GetComponent(GameComponentsLookup.PlayAreaParent); } }
    public bool hasPlayAreaParent { get { return HasComponent(GameComponentsLookup.PlayAreaParent); } }

    public void AddPlayAreaParent(UnityEngine.Transform newValue) {
        var index = GameComponentsLookup.PlayAreaParent;
        var component = (PlayAreaParentComponent)CreateComponent(index, typeof(PlayAreaParentComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplacePlayAreaParent(UnityEngine.Transform newValue) {
        var index = GameComponentsLookup.PlayAreaParent;
        var component = (PlayAreaParentComponent)CreateComponent(index, typeof(PlayAreaParentComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemovePlayAreaParent() {
        RemoveComponent(GameComponentsLookup.PlayAreaParent);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherPlayAreaParent;

    public static Entitas.IMatcher<GameEntity> PlayAreaParent {
        get {
            if (_matcherPlayAreaParent == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.PlayAreaParent);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherPlayAreaParent = matcher;
            }

            return _matcherPlayAreaParent;
        }
    }
}
