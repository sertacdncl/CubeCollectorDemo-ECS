//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity playerMoveDataEntity { get { return GetGroup(GameMatcher.PlayerMoveData).GetSingleEntity(); } }
    public PlayerMoveDataComponent playerMoveData { get { return playerMoveDataEntity.playerMoveData; } }
    public bool hasPlayerMoveData { get { return playerMoveDataEntity != null; } }

    public GameEntity SetPlayerMoveData(UnityEngine.Vector3 newVelocity, UnityEngine.Quaternion newRotation) {
        if (hasPlayerMoveData) {
            throw new Entitas.EntitasException("Could not set PlayerMoveData!\n" + this + " already has an entity with PlayerMoveDataComponent!",
                "You should check if the context already has a playerMoveDataEntity before setting it or use context.ReplacePlayerMoveData().");
        }
        var entity = CreateEntity();
        entity.AddPlayerMoveData(newVelocity, newRotation);
        return entity;
    }

    public void ReplacePlayerMoveData(UnityEngine.Vector3 newVelocity, UnityEngine.Quaternion newRotation) {
        var entity = playerMoveDataEntity;
        if (entity == null) {
            entity = SetPlayerMoveData(newVelocity, newRotation);
        } else {
            entity.ReplacePlayerMoveData(newVelocity, newRotation);
        }
    }

    public void RemovePlayerMoveData() {
        playerMoveDataEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public PlayerMoveDataComponent playerMoveData { get { return (PlayerMoveDataComponent)GetComponent(GameComponentsLookup.PlayerMoveData); } }
    public bool hasPlayerMoveData { get { return HasComponent(GameComponentsLookup.PlayerMoveData); } }

    public void AddPlayerMoveData(UnityEngine.Vector3 newVelocity, UnityEngine.Quaternion newRotation) {
        var index = GameComponentsLookup.PlayerMoveData;
        var component = (PlayerMoveDataComponent)CreateComponent(index, typeof(PlayerMoveDataComponent));
        component.Velocity = newVelocity;
        component.Rotation = newRotation;
        AddComponent(index, component);
    }

    public void ReplacePlayerMoveData(UnityEngine.Vector3 newVelocity, UnityEngine.Quaternion newRotation) {
        var index = GameComponentsLookup.PlayerMoveData;
        var component = (PlayerMoveDataComponent)CreateComponent(index, typeof(PlayerMoveDataComponent));
        component.Velocity = newVelocity;
        component.Rotation = newRotation;
        ReplaceComponent(index, component);
    }

    public void RemovePlayerMoveData() {
        RemoveComponent(GameComponentsLookup.PlayerMoveData);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherPlayerMoveData;

    public static Entitas.IMatcher<GameEntity> PlayerMoveData {
        get {
            if (_matcherPlayerMoveData == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.PlayerMoveData);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherPlayerMoveData = matcher;
            }

            return _matcherPlayerMoveData;
        }
    }
}
